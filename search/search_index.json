{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the McNative documentation \u00b6 The McNative Ecosystem is the next generation solution to develop your Minecraft network. McNative offers you many tools to develop plugins, manage your servers and extend your entire network. McNative is very flexible and has unlimited possibilities. McNative is still in beta and not yet complete, we need your support to bring McNative to a game changing technology. On this platform you will find all the information how to use and work with McNative. Support \u00b6 Supports to McNative is offered by our team and community via Discord. All supporters do this voluntarily and answer as soon as possible. Before asking a question, try to solve the problem with the help of this documentation. Contribution \u00b6 The documentation platform is open to everyone, and we will appreciate any contribution to this documentation. The documentation is written in .md files and can be easily modified in the GitHub repository.","title":"Overview"},{"location":"#welcome-to-the-mcnative-documentation","text":"The McNative Ecosystem is the next generation solution to develop your Minecraft network. McNative offers you many tools to develop plugins, manage your servers and extend your entire network. McNative is very flexible and has unlimited possibilities. McNative is still in beta and not yet complete, we need your support to bring McNative to a game changing technology. On this platform you will find all the information how to use and work with McNative.","title":"Welcome to the McNative documentation"},{"location":"#support","text":"Supports to McNative is offered by our team and community via Discord. All supporters do this voluntarily and answer as soon as possible. Before asking a question, try to solve the problem with the help of this documentation.","title":"Support"},{"location":"#contribution","text":"The documentation platform is open to everyone, and we will appreciate any contribution to this documentation. The documentation is written in .md files and can be easily modified in the GitHub repository.","title":"Contribution"},{"location":"console/","text":"","title":"Console"},{"location":"plugin/","text":"Getting started \u00b6 Preparation \u00b6 Installing the JDK \u00b6 Installing an IDE \u00b6 Installing an IDE \u00b6","title":"Getting started"},{"location":"plugin/#getting-started","text":"","title":"Getting started"},{"location":"plugin/#preparation","text":"","title":"Preparation"},{"location":"plugin/#installing-the-jdk","text":"","title":"Installing the JDK"},{"location":"plugin/#installing-an-ide","text":"","title":"Installing an IDE"},{"location":"plugin/#installing-an-ide_1","text":"","title":"Installing an IDE"},{"location":"plugin/manifest-and-main-class/","text":"Manifest and Main Class \u00b6 package org.mcnative.example ; import net.pretronic.libraries.plugin.lifecycle.Lifecycle ; import net.pretronic.libraries.plugin.lifecycle.LifecycleState ; import org.mcnative.common.plugin.MinecraftPlugin ; public class McNativeExamplePlugin extends MinecraftPlugin { @Lifecycle ( state = LifecycleState . BOOTSTRAP ) public void onLoad ( LifecycleState state ){ getLogger (). info ( \"My plugin started successfully\" ); } @Lifecycle ( state = LifecycleState . SHUTDOWN ) public void onShutdown ( LifecycleState state ){ getLogger (). info ( \"My plugin stopped successfully\" ); } }","title":"Manifest and Main Class"},{"location":"plugin/manifest-and-main-class/#manifest-and-main-class","text":"package org.mcnative.example ; import net.pretronic.libraries.plugin.lifecycle.Lifecycle ; import net.pretronic.libraries.plugin.lifecycle.LifecycleState ; import org.mcnative.common.plugin.MinecraftPlugin ; public class McNativeExamplePlugin extends MinecraftPlugin { @Lifecycle ( state = LifecycleState . BOOTSTRAP ) public void onLoad ( LifecycleState state ){ getLogger (). info ( \"My plugin started successfully\" ); } @Lifecycle ( state = LifecycleState . SHUTDOWN ) public void onShutdown ( LifecycleState state ){ getLogger (). info ( \"My plugin stopped successfully\" ); } }","title":"Manifest and Main Class"},{"location":"plugin/workspace-setup/","text":"","title":"Workspace setup"}]}